version: '3.8'

services:
  # 主应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: data-middle-station
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=${DB_USER:-root}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=${DB_NAME:-data_middle_station}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - mysql
      - redis
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/public/uploads

  # MySQL 服务
  mysql:
    image: mysql:8.0
    container_name: data-middle-station-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-password}
      - MYSQL_DATABASE=${DB_NAME:-data_middle_station}
    ports:
      - '3306:3306'
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 服务
  redis:
    image: redis:7.0-alpine
    container_name: data-middle-station-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # 日志收集服务（可选）
  logspout:
    image: gliderlabs/logspout:latest
    container_name: data-middle-station-logspout
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network
    command: syslog://logstash:5000

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data:
