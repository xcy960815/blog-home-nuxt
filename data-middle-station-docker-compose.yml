# version: '3.8'

services:
  # nuxt3
  nuxt3:
    image: xcy960815/data-middle-station:1.0
    container_name: ${CONTAINER_NAME}
    ports:
      - '${PORT}:12583'
    volumes:
      - ./logs:/data-middle-station-container/logs
    env_file:
      - ./env/.env.prod
    extra_hosts:
      - '${HOST_DOCKER_INTERNAL}:host-gateway'
    restart: unless-stopped
    networks:
      - data-middle-station-network
    depends_on:
      mysql:
        condition: service_healthy

  # mysql配置
  mysql:
    image: mysql:8.4.2
    container_name: ${MYSQL_CONTAINER_NAME}
    command: [
      "--bind-address=0.0.0.0",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci",
      "--max_allowed_packet=128M",
      "--sql-mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION",
      "--default-time-zone=+8:00"
    ]
    env_file:
      - ./env/.env.prod
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - data-middle-station-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
      interval: 5s
      start_period: 30s

networks:
  data-middle-station-network:
    driver: bridge

volumes:
  mysql-data:
    name: ${MYSQL_DATA_VOLUME_NAME}
    driver: local




# docker-compose -f data-middle-station-docker-compose.yml --env-file ./env/.env.prod up -d --remove-orphans
# 停止 data-middle-station 项目的容器
# docker-compose -f data-middle-station-docker-compose.yml down