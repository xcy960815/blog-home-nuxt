services:
  nuxt3:
    image: xcy960815/data-middle-station:1.0
    container_name: ${CONTAINER_NAME}
    ports:
      - '${PORT}:12583'
    volumes:
      - ./logs:/data-middle-station-container/logs
    env_file:
      - ./env/.env.prod
    extra_hosts:
      - '${HOST_DOCKER_INTERNAL}:host-gateway'
    restart: unless-stopped
    networks:
      - data-middle-station-network
    depends_on:
      mysql:
        condition: service_healthy

  # mysql配置
  mysql:
    image: mysql:8.4.2 # 镜像
    container_name: ${MYSQL_CONTAINER_NAME} # 容器名称
    command: [
      "--bind-address=0.0.0.0", # 绑定地址
      "--character-set-server=utf8mb4", # 字符集
      "--collation-server=utf8mb4_unicode_ci", # 排序规则
      "--max_allowed_packet=128M", # 最大允许包
      "--sql-mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION", # sql模式
      "--default-time-zone=+8:00" # 时区
    ]
    env_file:
      - ./env/.env.prod
    ports:
      - "${MYSQL_PORT}:3306" # 端口
    volumes:
      - mysql-data:/var/lib/mysql # 挂载卷
    networks:
      - data-middle-station-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"] # 健康检查
      timeout: 20s # 超时
      retries: 10 # 重试次数
      interval: 5s # 间隔
      start_period: 30s # 启动时间

networks:
  data-middle-station-network:
    driver: bridge

volumes:
  mysql-data:
    name: ${MYSQL_DATA_VOLUME_NAME}
    driver: local




# docker-compose -f data-middle-station-docker-compose.yml --env-file ./env/.env.prod up -d --remove-orphans
# 停止 data-middle-station 项目的容器
# docker-compose -f data-middle-station-docker-compose.yml down